name: Build

permissions:
  contents: write

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  nix_build_static:
    strategy:
      max-parallel: 4
      matrix:
        preset: [static, ipv6_static, verify_msrv_ipv6_static]
        arch: [x86_64, aarch64]

    runs-on: ubuntu-latest
    env:
      package_name: ${{ matrix.preset }}-${{ matrix.arch }}-unknown-linux-musl
      filename: einat-${{ matrix.preset }}-${{ matrix.arch }}-unknown-linux-musl
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            sandbox = false # can't install in act without this

      - name: Nix build
        run: nix build .#${{ env.package_name }} && cp ./result/bin/einat ${{ env.filename }}

      - if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.filename }}
          path: ${{ env.filename }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: nix_build_static
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: builds
          merge-multiple: true

      - name: Release with builds
        uses: softprops/action-gh-release@v2
        with:
          files: builds/*
          fail_on_unmatched_files: true
          draft: true
